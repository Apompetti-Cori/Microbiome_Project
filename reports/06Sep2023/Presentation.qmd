---
title: "Research Meeting Report"
execute:
  echo: false
author: Anthony Pompetti
date: ""
date-format: long
format: 
  revealjs:
    theme: simple
    logo: ../Coriell_Logo.png
    embed-resources: true
---

```{r setup, include=FALSE}
here::i_am(".here")
source(here::here("scripts", "01_data_preprocessing.R"))
library(circlize)
library(ComplexHeatmap)
library(reshape2)
library(gt)
library(patchwork)
library(lattice)
library(ggmosaic)
library(org.Mm.eg.db)
library(clusterProfiler)
```

## Setup Summarized Experiment {visibility="hidden"}
```{r sumexp, include=FALSE, cache=TRUE}
#Load SE
se <- HDF5Array::loadHDF5SummarizedExperiment(dir = here("data","se","rrbs_compile"))

pj <- se[
  ,
  se$genotype %in% c("ApcMin", "ApcMin/IL10KO") 
  & se$sampletype %noin% c("Organoid")
]

#Filter project for no treatment
pj <- pj[
  ,
  is.na(pj$treatment)
]

#Filter project for 20 coverage across 75% of the samples. Ignore tumor samples when filtering.
pj <- filter_rrbs(
  pj, 
  percent_coverage = .75,
  min_coverage = 20, 
  max_coverage = Inf,
  workers = 40, 
  nblocks = 20,
  ignore_samples = "se$sampletype != 'tumor'"
)

pj_normal <- pj[,pj$sampletype == "normal"]
pj_normal <- annotate_se(pj_normal)

#Filter project for just normal samples. Get methylation values
meth <- getMeth(pj_normal, type = "raw") %>% realize_Parallel(workers = 12, nblocks = 6)
```

## Analysis: PCA {visibility="hidden"}
```{r pca_analysis, include=FALSE, cache=TRUE}
sites <- rownames(subset(pj_normal, !is_island))
pca_meth <- meth[sites,]
pca_noncgi <- PCAtools::pca(
  pca_meth[!rowAnyNAs(pca_meth),],
  metadata = colData(pj_normal)
)

sites <- rownames(subset(pj_normal, is_island))
pca_meth <- meth[sites,]
pca_cgi <- PCAtools::pca(
  pca_meth[!rowAnyNAs(pca_meth),],
  metadata = colData(pj_normal)
)

pca_meth <- meth
pca_all <- PCAtools::pca(
  pca_meth[!rowAnyNAs(pca_meth),],
  metadata = colData(pj_normal)
)
```

## Analysis: Differential Methylation {visibility="hidden"}
```{r diffmeth, cache=TRUE, include=FALSE}
md <- data.frame(colData(pj_normal[,get_Duplicates(pj_normal$mouse_id)]))
md$suborgan_microbiome <- paste(md$suborgan, md$microbiome, sep = "_")
md$mouse_id <- as.factor(md$mouse_id)

mvals <- beta2m(meth[,md$sample_id])

#design <- model.matrix(~0 + suborgan_microbiome + mouse_id, data = md)
design <- model.matrix(~0 + suborgan_microbiome, data = md)
colnames(design) <- gsub(pattern = "suborgan_microbiome", "", colnames(design))

contrast.matrix <- limma::makeContrasts(
  by_suborgan = (PCOL_consortium + PCOL_spf + PCOL_gf + PCOL_eckp)/4 - (DCOL_consortium + DCOL_spf + DCOL_gf + DCOL_eckp)/4,
  spf_by_suborgan = PCOL_spf - DCOL_spf,
  gf_by_suborgan = PCOL_gf - DCOL_gf,
  eckp_by_suborgan = PCOL_eckp - DCOL_eckp,
  consortium_by_suborgan = PCOL_consortium - DCOL_consortium,
  spf_gf_pcol = PCOL_spf - PCOL_gf,
  consortium_gf_pcol = PCOL_consortium - PCOL_gf,
  eckp_gf_pcol = PCOL_eckp - PCOL_gf,
  spf_gf_dcol = DCOL_spf - DCOL_gf,
  consortium_gf_dcol = DCOL_consortium - DCOL_gf,
  eckp_gf_dcol = DCOL_eckp - DCOL_gf,
  spf_gf = (PCOL_spf + DCOL_spf)/2 - (PCOL_gf + DCOL_gf)/2,
  consortium_gf = (PCOL_consortium + DCOL_consortium)/2 - (PCOL_gf + DCOL_gf)/2,
  eckp_gf = (PCOL_eckp + DCOL_eckp)/2 - (PCOL_gf + DCOL_gf)/2,
  levels=design
  )

fit <- limma::lmFit(mvals, design)

fit2 <- limma::contrasts.fit(fit, contrasts = contrast.matrix)
fit2 <- limma::eBayes(fit2, trend = TRUE, robust = TRUE)

results <- mcsapply(
  colnames(contrast.matrix), 
  function(x){
    limma::topTable(fit2, number = Inf, coef = x)
  },
  simplify = FALSE,
  USE.NAMES = TRUE,
  mc.cores = length(colnames(contrast.matrix))
)

results <- mcsapply(
  names(results),
  FUN = function(x) {
    df <- results[[x]]
    df <- dplyr::mutate(df, chr_base = rownames(df))
    CD <- contrastDiff(
      design = design, contrast.matrix = contrast.matrix,
      contrast_name = x, meth = meth[,md$sample_id]
    )
    mcols <- as.data.frame(mcols(pj_normal))
    df <- left_join(df, mcols, by = "chr_base")
    df <- left_join(df, CD, by = "chr_base")
    df$sig <- df$adj.P.Val < 0.1 & abs(df$diff) > .1
    rownames(df) <- df$chr_base
    return(df)
  },
  simplify = FALSE,
  USE.NAMES = TRUE,
  mc.cores = length(results)
)

contrasts <- data.frame(
  chr_base = mcols(pj_normal)[["chr_base"]],
  is_island = mcols(pj_normal)[["is_island"]],
  is_promoter = mcols(pj_normal)[["is_promoter"]],
  row.names = mcols(pj_normal)[["chr_base"]]
)

for(name in names(results)){
    df <- results[[name]]
    test <- df[df$sig,"chr_base"]
    contrasts[[name]] <- contrasts$chr_base %in% test
}
```

## Project 2: Microbiome and tumorigenesis {style="font-size: 20px;"}
#### Sample layout {style="font-size: 16px;"}
```{r}
count <- as.data.frame(colData(pj)) %>%
  dplyr::select(mouse_id, genotype, treatment, microbiome, suborgan, sampletype) %>%
  unique() %>%
  replace_na(list(treatment = "None")) %>%
  count(genotype, treatment, microbiome, suborgan, sampletype)

count <- pivot_wider(
  count, 
  names_from = c("genotype", "treatment", "microbiome", "suborgan", "sampletype"), 
  values_from = "n", 
  names_glue = "{genotype}.{treatment}.{microbiome}.{suborgan}.{sampletype}"
)

count %>% 
  gt() %>% 
  tab_spanner_delim(
    delim = "."
  ) %>%
    fmt(
    columns = everything(),
    fns = function(x) ifelse(x == 0, "—", scales::number(x))
  ) %>%
  cols_width(
    everything() ~ px(60)
  ) %>% 
  data_color(
    domain = c(0:max(count)),
    method = "numeric",
    palette = colorRampPalette(c("snow","navy"))(max(count)),
    na_color = "snow"
  )
```

## Project 2: No treatment, All sampletypes, All microbiomes, Filtering done on just normal samples {style="font-size: 20px;"}
#### Goal: Investigate PCOL vs DCOL differences {style="font-size: 16px;"}
#### Sample layout {style="font-size: 16px;"}
```{r}
count <- as.data.frame(colData(pj_normal)) %>%
  dplyr::select(mouse_id, treatment, microbiome, suborgan, sampletype) %>%
  unique() %>%
  replace_na(list(treatment = "None")) %>%
  count(microbiome, treatment, suborgan, sampletype)

count <- pivot_wider(count, names_from = c("treatment", "microbiome", "suborgan", "sampletype"), values_from = "n", names_glue = "{treatment}.{microbiome}.{sampletype}.{suborgan}")

count[is.na(count)] <- 0

count %>% 
gt() %>% 
tab_spanner_delim(
  delim = "."
) %>%
  fmt(
  columns = everything(),
  fns = function(x) ifelse(x == 0, "—", scales::number(x))
) %>%
cols_width(
  everything() ~ px(60)
) %>% 
data_color(
  domain = c(0:max(count)),
  method = "numeric",
  palette = colorRampPalette(c("snow","navy"))(max(count)),
  na_color = "snow"
)
```

## PCA {style="font-size: 20px;"}
```{r, include=FALSE}
p_results <- sapply(
  list("All" = pca_all, "CGI" = pca_cgi, "nonCGI" = pca_noncgi),
  FUN = function(pca) {
    p1 <- ggplot(data = pca$rotated, aes(PC1, PC2, color = factor(pca$metadata$microbiome,
      levels = c(
        "gf", "consortium",
        "spf", "eckp"
      )
    ))) +
      geom_point(size = 10, alpha = .9) +
      scale_color_manual(
        name = "Microbiota",
        values = c("skyblue", "blueviolet", "gold3", "firebrick2"),
        labels = c("GF", "Consortium", "SPF", "ECKP")
      ) +
      labs(
        y = sprintf("PC2 (%s%%)", round(pca$variance[["PC2"]], 1)),
        x = sprintf("PC1 (%s%%)", round(pca$variance[["PC1"]], 1))
      ) +
      theme_classic() +
      theme(
        text = element_text(face = "bold", family = "Arial"),
        legend.title = element_text(size = 14),
        axis.title.x = element_text(size = 14),
        axis.title.y = element_text(size = 14),
        legend.text = element_text(size = 12),
        axis.text = element_text(size = 12),
        legend.position = "bottom"
      ) +
      guides(color = guide_legend(override.aes = list(size = 5)))

    p2 <- ggplot(data = pca$rotated, aes(PC1, PC2, color = pca$metadata$suborgan)) +
      geom_point(size = 10, alpha = .9) +
      scale_color_manual(
        name = "Tissue Type",
        values = c("forestgreen", "orange2"),
        labels = c("Distal", "Proximal")
      ) +
      labs(
        y = sprintf("PC2 (%s%%)", round(pca$variance[["PC2"]], 1)),
        x = sprintf("PC1 (%s%%)", round(pca$variance[["PC1"]], 1))
      ) +
      theme_classic() +
      theme(
        text = element_text(face = "bold", family = "Arial"),
        legend.title = element_text(size = 14),
        axis.title.x = element_text(size = 14),
        axis.title.y = element_text(size = 14),
        legend.text = element_text(size = 12),
        axis.text = element_text(size = 12),
        legend.position = "bottom"
      ) + 
      guides(color = guide_legend(override.aes = list(size = 5)))


    p3 <- plot_ly(
      data = pca$rotated, x = ~PC1, y = ~PC3, z = ~PC2,
      color = pca$metadata$microbiome,
      text = paste(
        rownames(pca$metadata),
        pca$metadata$microbiome,
        pca$metadata$sampletype,
        pca$metadata$strain,
        pca$metadata$age
      )
    ) %>%
      layout(
        scene = list(
          xaxis = list(title = paste("PC1", " ", round(pca$variance[["PC1"]], 2), "%", sep = "")),
          yaxis = list(title = paste("PC3", " ", round(pca$variance[["PC3"]], 2), "%", sep = "")),
          zaxis = list(title = paste("PC2", " ", round(pca$variance[["PC2"]], 2), "%", sep = ""))
        )
      ) %>%
      add_markers(
        symbol = pca$metadata$suborgan,
        symbols = c("circle", "square", "diamond", "cross", "circle-open", "square-open", "diamond-open", "x")
      )

    return(list("microbiome" = p1, "suborgan" = p2, "microbiome3d" = p3))
  },
  simplify = FALSE,
  USE.NAMES = TRUE
)
```

### All sites
::: panel-tabset
### Microbiome (2d) {style="font-size: 8px;"}
```{r  fig.width=8, fig.height=7, dpi=300, out.width="50%"}
p_results$All$microbiome
```

### Suborgan (2d) {style="font-size: 8px;"}
```{r  fig.width=8, fig.height=7, dpi=300, out.width="50%"}
p_results$All$suborgan
```

### Combined {style="font-size: 8px;"}
```{r, fig.height=6, fig.width=15, dpi=300, out.width="50%"}
p_results$All$microbiome + p_results$All$suborgan + 
  patchwork::plot_annotation(tag_levels = list(c("A", "B"))) & 
  theme(plot.tag = element_text(size = 32, face = "bold", family = 'Arial'), 
        legend.position = "bottom")
```


### Microbiome-Suborgan (3d) {style="font-size: 8px;"}
```{r}
p_results$All$microbiome3d
```
:::

## PCA {style="font-size: 20px;"}
### nonCGI
::: panel-tabset
### Microbiome (2d) {style="font-size: 8px;"}
```{r  fig.width=8, fig.height=7, dpi=300, out.width="50%"}
p_results$nonCGI$microbiome
```

### Suborgan (2d) {style="font-size: 8px;"}
```{r  fig.width=8, fig.height=7, dpi=300, out.width="50%"}
p_results$nonCGI$suborgan
```

### Combined {style="font-size: 8px;"}
```{r, fig.height=6, fig.width=15, dpi=300, out.width="50%"}
p_results$nonCGI$microbiome + p_results$nonCGI$suborgan + 
  patchwork::plot_annotation(tag_levels = list(c("A", "B"))) & 
  theme(plot.tag = element_text(size = 32, face = "bold", family = 'Arial'), 
        legend.position = "bottom")
```

### Microbiome-Suborgan (3d) {style="font-size: 8px;"}
```{r}
p_results$nonCGI$microbiome3d
```
:::

## PCA {style="font-size: 20px;"}
### CGI
::: panel-tabset
### Microbiome (2d) {style="font-size: 8px;"}
```{r  fig.width=8, fig.height=7, dpi=300, out.width="50%"}
p_results$CGI$microbiome
```

### Suborgan (2d) {style="font-size: 8px;"}
```{r  fig.width=8, fig.height=7, dpi=300, out.width="50%"}
p_results$CGI$suborgan
```

### Combined {style="font-size: 8px;"}
```{r, fig.height=6, fig.width=15, dpi=300, out.width="50%"}
p_results$CGI$microbiome + p_results$CGI$suborgan + 
  patchwork::plot_annotation(tag_levels = list(c("A", "B"))) & 
  theme(plot.tag = element_text(size = 32, face = "bold", family = 'Arial'), 
        legend.position = "bottom")
```

### Microbiome-Suborgan (3d) {style="font-size: 8px;"}
```{r}
p_results$CGI$microbiome3d
```
:::

## Differential Methylation using `r prettyNum(nrow(pj_normal), big.mark = ",", scientific = FALSE)` sites {style="font-size: 16px;"}
#### Comparing PCOL vs DCOL {style="font-size: 16px;"}
```{r, include=FALSE}
p_results <- sapply(
  names(results)[1:5],
  FUN = function(x){
    df <- results[[x]];
    
    df_plot <- df
    p <- coriell::plot_volcano(df_plot, x = "diff", y = "adj.P.Val", fdr = .1, lfc = .1) + 
      labs(caption = sprintf("FDR = .1 \ndiffMeth cutoff = .1 \nN sites: %s", nrow(df_plot))) + 
      xlab("diffMeth") + 
      theme(plot.title = element_text(size = 20))
  
    df_plot <- df[!df$is_island,]
    df_plot$adj.P.Val2 <- p.adjust(df_plot$P.Value,
                                   n = nrow(df_plot),
                                   method = "fdr")
    p1 <- coriell::plot_volcano(
      df_plot, 
      x = "diff", y = "adj.P.Val2", fdr = .1, lfc = .1
    ) + 
      labs(caption = sprintf("FDR = .1 \ndiffMeth cutoff = .1 \nN sites: %s", nrow(df_plot))) + 
      xlab("diffMeth") + 
      theme(plot.title = element_text(size = 20))
    
    df_plot <- df[df$is_island,]
    df_plot$adj.P.Val2 <- p.adjust(df_plot$P.Value, 
                                   n = nrow(df_plot), 
                                   method = "fdr")
    p2 <- coriell::plot_volcano(
      df_plot, 
      x = "diff", y = "adj.P.Val2", fdr = .1, lfc = .1
    ) + 
      labs(caption = sprintf("FDR = .1 \ndiffMeth cutoff = .1 \nN sites: %s", nrow(df_plot))) + 
      xlab("diffMeth") + 
      theme(plot.title = element_text(size = 20))
    
    return(list("all" = p, "non-islands" = p1, "islands" = p2))
  },
  simplify = FALSE,
  USE.NAMES = TRUE
)
```

::: panel-tabset
### Volcano plot (all) {style="font-size: 2px;"}
```{r fig.width=20, fig.height=10}
p1 <- p_results[["by_suborgan"]]$all + ggtitle("PCOL-DCOL")
p2 <- p_results[["gf_by_suborgan"]]$all + ggtitle("GF: PCOL-DCOL")
p3 <- p_results[["spf_by_suborgan"]]$all + ggtitle("SPF: PCOL-DCOL")
p4 <- p_results[["consortium_by_suborgan"]]$all + ggtitle("CONS: PCOL-DCOL")
p5 <- p_results[["eckp_by_suborgan"]]$all + ggtitle("ECKP: PCOL-DCOL")

(p1 | p2)/(p3 | p4 | p5)
```

### Volcano (non-islands) {style="font-size: 2px;"}
```{r fig.width=20, fig.height=10}
p1 <- p_results[["by_suborgan"]]$`non-islands` + ggtitle("PCOL-DCOL")
p2 <- p_results[["gf_by_suborgan"]]$`non-islands` + ggtitle("GF: PCOL-DCOL")
p3 <- p_results[["spf_by_suborgan"]]$`non-islands` + ggtitle("SPF: PCOL-DCOL")
p4 <- p_results[["consortium_by_suborgan"]]$`non-islands` + ggtitle("CONS: PCOL-DCOL")
p5 <- p_results[["eckp_by_suborgan"]]$`non-islands` + ggtitle("ECKP: PCOL-DCOL")

(p1 | p2)/(p3 | p4 | p5)
```

### Volcano (islands) {style="font-size: 2px;"}
```{r fig.width=20, fig.height=10}
p1 <- p_results[["by_suborgan"]]$`islands` + ggtitle("PCOL-DCOL")
p2 <- p_results[["gf_by_suborgan"]]$`islands` + ggtitle("GF: PCOL-DCOL")
p3 <- p_results[["spf_by_suborgan"]]$`islands` + ggtitle("SPF: PCOL-DCOL")
p4 <- p_results[["consortium_by_suborgan"]]$`islands` + ggtitle("CONS: PCOL-DCOL")
p5 <- p_results[["eckp_by_suborgan"]]$`islands` + ggtitle("ECKP: PCOL-DCOL")

(p1 | p2)/(p3 | p4 | p5)
```

### Upset plot {style="font-size: 2px;"}
```{r, fig.width=20, fig.height=10}
library(ComplexUpset)
upset(
  contrasts,
  names(results)[1:5],
  set_sizes=(
        upset_set_size(
            geom=geom_bar(
                aes(fill=is_island, alpha=is_promoter, x=group),
                width = .4,
                color = "darkgray"
            ),
            position='left'
        ) 
        + scale_fill_manual(values=c(
                'FALSE'='red', 'TRUE'='dodgerblue'
            )) 
        + guides(fill=guide_legend(title="Island Status"),
                     alpha=guide_legend(title="Promoter Status"))
        + scale_y_continuous(breaks=seq(0, 20000, 10000))
        + geom_text(aes(label = ..count..), vjust = 0, stat='count')
    ),
  base_annotations=list(
        'Intersection size'=intersection_size(
            counts=TRUE,
            color = "darkgray",
            width = .6,
            mapping=aes(fill=is_island),
            bar_number_threshold = Inf
        ) 
        + scale_fill_manual(values=c(
            'FALSE'='red', 'TRUE'='dodgerblue'
        ))
        + guides(fill=guide_legend(title="Island Status"))
    ),
  annotations = list(
        'CpGI/nonCpGI'=(
            ggplot(mapping=aes(fill=is_island, alpha = is_promoter))
            + geom_bar(stat='count', position='fill', color = "darkgray", width = .6)
            + scale_y_continuous(labels=scales::percent_format())
            + scale_fill_manual(values=c(
                'FALSE'='red', 'TRUE'='dodgerblue'
            ))
            + ylab('CpGI Proportion')
            + guides(fill=guide_legend(title="Island Status"),
                     alpha=guide_legend(title="Promoter Status"))
        )
    ),
  width_ratio=0.2
) + patchwork::plot_layout(heights=c(0.5, 1, 0.5), guides = "collect")
```

### Hyper vs Hypo {style="font-size: 2px;"}
```{r, include=FALSE}
p_results <- sapply(
  names(results)[1:5],
  FUN = function(x) {
    data <- results[[x]]
    data <- data[data$sig,]
    data$is_island <- factor(data$is_island, levels = c(FALSE, TRUE))
    data$status <- factor(data$status, levels = c("hyper", "hypo"))
    
    p <- ggplot(data) +
      geom_mosaic(aes(x = is_island, fill=status)) + 
      ggtitle(
            label = "Hyper/Hypo vs CpGI/nonCpGI"
      )
  },
  simplify = FALSE,
  USE.NAMES = TRUE
)
```

```{r fig.width=20, fig.height=10}
p1 <- p_results[["by_suborgan"]] + labs(caption = "PCOL-DCOL")
p2 <- p_results[["gf_by_suborgan"]] + labs(caption = "GF: PCOL-DCOL")
p3 <- p_results[["spf_by_suborgan"]] + labs(caption = "SPF: PCOL-DCOL")
p4 <- p_results[["consortium_by_suborgan"]] + labs(caption = "CONS: PCOL-DCOL")
p5 <- p_results[["eckp_by_suborgan"]] + labs(caption = "ECKP: PCOL-DCOL")

(p1 | p2)/(p3 | p4 | p5)
```

### Odds Ratio {style="font-size: 2px;"}
```{r, fig.width=10, fig.height=5}
test_results <- sapply(
  names(results[1:5]),
  FUN = function(x){
    data <- results[[x]]
    data$is_island <- factor(data$sig, levels = c(FALSE, TRUE))
    data$sig <- factor(data$sig, levels = c(TRUE, FALSE))
    table <- table(df$is_island, data$sig)
    table <- table[c("FALSE", "TRUE"),c("TRUE", "FALSE")]
    test <- fisher.test(table, alternative = "two.sided")
    
    p <- ggplot(data) +
      geom_mosaic(aes(x = sig, fill=type)) + 
      ggtitle(
            label = "Non-cpgi vs cpgi vs differential methylation significance",
            subtitle = sprintf("Fisher's exact p-value: %s, Odds ratio: %s, CI: %s/%s", 
                       test$p.value, round(test$estimate, 3), 
                       round(test$conf.int[1], 3), 
                       round(test$conf.int[2], 3))
      )
    
    return(list("test" = test, "table" = table, "plot" = p))
  },
  simplify = FALSE,
  USE.NAMES = TRUE
)

or_df <- data.frame(
  or = as.vector(sapply(test_results, function(x){x$test$estimate})), 
  ciLo = as.vector(sapply(test_results, function(x){x$test$conf.int[1]})),
  ciHi = as.vector(sapply(test_results, function(x){x$test$conf.int[2]})),
  row.names = names(test_results)
)

or_df <- or_df[order(or_df$or),]
p <- ggplot(or_df, aes(x = or, 
                       y = reorder(rownames(or_df),
                                   order(or_df$or)))) +
  geom_point(size = 3.5, color = "orange") +
  geom_errorbarh(
    aes(xmax = ciHi, xmin = ciLo), 
    size = .5, 
    height = .1, 
    color = "gray50"
  ) + 
  geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed") +
  scale_x_continuous(breaks = seq(0,max(or_df$ciHi),1)) +
  xlab("Odds ratio") + 
  ylab("") +
  labs(title = "Odds ratios of each microbiome", 
       subtitle = "OR: Non-cpgi vs cpgi") +
  coriell::theme_coriell()

p
```

### Heatmap {style="font-size: 2px;"}
```{r fig.height=10, fig.width=20, cache=TRUE}
data <- results[["by_suborgan"]] %>% filter(sig == TRUE)
se_subset <- subset(pj_normal, chr_base %in% data$chr_base)
ht_meth <- meth[data$chr_base,]

color_mapping <- list(
  microbiome = c(
    "eckp" = "red",
    "consortium" = "blue",
    "spf" = "yellow",
    "gf" = "forestgreen"
  ),
  suborgan = c(
    "PCOL" = "lightblue",
    "DCOL" = "darkred"
  )
)

col_ha <- HeatmapAnnotation(
  df = colData(se_subset)[, c(
    "suborgan", "microbiome"
  ), drop = FALSE],
  col = color_mapping,
  annotation_legend_param = list(
    suborgan = list(
      nrow = 1
      ),
    microbiome = list(
      nrow = 1
    )
    ),
  border = TRUE
)

sites <- rownames(subset(se_subset, !is_island))
ht1 <- ComplexHeatmap::Heatmap(ht_meth[sites,],
  name = "meth",
  column_title = "Non-Islands",
  top_annotation = col_ha,
  show_row_names = FALSE,
  row_dend_side = "right",
  heatmap_legend_param = list(
    legend_direction = "horizontal",
    legend_width = unit(5, "cm")
  ),
  col = colorRampPalette(c(
    "navy",
    "snow",
    "gold"
  ))(10)
)

sites <- rownames(subset(se_subset, is_island))
ht2 <- ComplexHeatmap::Heatmap(ht_meth[sites,],
  name = "meth",
  column_title = "Islands",
  top_annotation = col_ha,
  show_row_names = FALSE,
  row_dend_side = "right",
  heatmap_legend_param = list(
    legend_direction = "horizontal",
    legend_width = unit(5, "cm")
  ),
  col = colorRampPalette(c(
    "navy",
    "snow",
    "gold"
  ))(10)
)

p1 <- draw(
  ht1, heatmap_legend_side = "bot", 
  annotation_legend_side = "bot"
) %>% 
  grid.grabExpr()

p2 <- draw(
  ht2, heatmap_legend_side = "bot", 
  annotation_legend_side = "bot"
) %>% 
  grid.grabExpr()

wrap_plots(list(p1, p2))
```

### diffMeth Violin {style="font-size: 2px;"}
```{r fig.height=10, fig.width=20}
data <- results[["by_suborgan"]] %>% filter(sig == TRUE)
se_subset <- subset(pj_normal, chr_base %in% data$chr_base)
#Get only samples that have a duplicate
meth_subset <- meth[data$chr_base,get_Duplicates(se_subset$mouse_id)]
se_subset <- se_subset[data$chr_base,get_Duplicates(se_subset$mouse_id)]

group1 <- meth_subset[,se_subset$suborgan == "PCOL"]
group2 <- meth_subset[,se_subset$suborgan == "DCOL"]

diffMeth <- (group1 - group2)
colnames(diffMeth) <- unique(se_subset$mouse_id)

df_melt <- reshape2::melt(diffMeth)
names(df_melt) <- c("chr_base", "mouse_id", "diffMeth")

col_df <- colData(se_subset)[duplicated(se_subset$mouse_id), 
                         c("microbiome", "mouse_id"), drop = FALSE]

df_melt <- left_join(data.frame(col_df), df_melt, by = "mouse_id")

p <- ggplot(df_melt, aes(x=microbiome, y=diffMeth, color = microbiome)) + 
  geom_violin() + 
  geom_boxplot(width=0.1) + 
  coriell::theme_coriell() +
  geom_hline(aes(yintercept = 0), size = .25, linetype = "dashed") + 
  NULL

p
```
:::

## Differential Methylation using `r prettyNum(nrow(pj_normal), big.mark = ",", scientific = FALSE)` sites {style="font-size: 16px;"}
#### Comparing microbiome vs germ-free controlling for sidedness {style="font-size: 16px;"}
```{r, include=FALSE}
p_results <- sapply(
  names(results)[12:14],
  FUN = function(x){
    df <- results[[x]];
    
    df_plot <- df
    p <- coriell::plot_volcano(df_plot, x = "diff", y = "adj.P.Val", fdr = .1, lfc = .1) + 
      labs(caption = sprintf("FDR = .1 \ndiffMeth cutoff = .1 \nN sites: %s", nrow(df_plot))) + 
      xlab("diffMeth") + 
      theme(plot.title = element_text(size = 20))
    
    
    df_plot <- df[!df$is_island,]
    df_plot$adj.P.Val2 <- p.adjust(df_plot$P.Value, 
                                   n = nrow(df_plot), 
                                   method = "fdr")
    p1 <- coriell::plot_volcano(
      df_plot, 
      x = "diff", y = "adj.P.Val2", fdr = .1, lfc = .1
    ) + 
      labs(caption = sprintf("FDR = .1 \ndiffMeth cutoff = .1 \nN sites: %s", nrow(df_plot))) + 
      xlab("diffMeth") + 
      theme(plot.title = element_text(size = 20))
    
    
    df_plot <- df[df$is_island,]
    df_plot$adj.P.Val2 <- p.adjust(df_plot$P.Value, 
                                   n = nrow(df_plot), 
                                   method = "fdr")
    p2 <- coriell::plot_volcano(
      df_plot, 
      x = "diff", y = "adj.P.Val2", fdr = .1, lfc = .1
    ) + 
      labs(caption = sprintf("FDR = .1 \ndiffMeth cutoff = .1 \nN sites: %s", nrow(df_plot))) + 
      xlab("diffMeth") + 
      theme(plot.title = element_text(size = 20))
    
    return(list("all" = p, "non-islands" = p1, "islands" = p2))
  },
  simplify = FALSE,
  USE.NAMES = TRUE
)
```

::: panel-tabset
### Volcano plot (all) {style="font-size: 2px;"}
```{r fig.width=20, fig.height=10}
p1 <- p_results[["spf_gf"]]$all + ggtitle("SPF-GF")
p2 <- p_results[["consortium_gf"]]$all + ggtitle("CONS-GF")
p3 <- p_results[["eckp_gf"]]$all + ggtitle("ECKP-GF")

(p1 | p2)/(p3)
```

### Volcano (non-islands) {style="font-size: 2px;"}
```{r fig.width=20, fig.height=10}
p1 <- p_results[["spf_gf"]]$`non-islands` + ggtitle("SPF-GF")
p2 <- p_results[["consortium_gf"]]$`non-islands` + ggtitle("CONS-GF")
p3 <- p_results[["eckp_gf"]]$`non-islands` + ggtitle("ECKP-GF")

(p1 | p2)/(p3)
```

### Volcano (islands) {style="font-size: 2px;"}
```{r fig.width=20, fig.height=10}
p1 <- p_results[["spf_gf"]]$islands + ggtitle("SPF-GF")
p2 <- p_results[["consortium_gf"]]$islands + ggtitle("CONS-GF")
p3 <- p_results[["eckp_gf"]]$islands + ggtitle("ECKP-GF")

(p1 | p2)/(p3)
```

### Upset plot {style="font-size: 2px;"}
```{r, fig.width=20, fig.height=10}
library(ComplexUpset)
upset(
  contrasts,
  names(results[12:14]),
  set_sizes=(
        upset_set_size(
            geom=geom_bar(
                aes(fill=is_island, alpha=is_promoter, x=group),
                width = .2,
                color = "darkgray"
            ),
            position='left'
        ) 
        + scale_fill_manual(values=c(
                'FALSE'='red', 'TRUE'='dodgerblue'
            )) 
        + guides(fill=guide_legend(title="Island Status"),
                     alpha=guide_legend(title="Promoter Status"))
        + scale_y_continuous(breaks=seq(0, 20000, 10000))
        + geom_text(aes(label = ..count..), vjust = 0, stat='count')
    ),
  base_annotations=list(
        'Intersection size'=intersection_size(
            counts=TRUE,
            color = "darkgray",
            width = .2,
            mapping=aes(fill=is_island),
            bar_number_threshold = Inf
        ) 
        + scale_fill_manual(values=c(
            'FALSE'='red', 'TRUE'='dodgerblue'
        ))
        + guides(fill=guide_legend(title="Island Status"))
    ),
  annotations = list(
        'CpGI/nonCpGI'=(
            ggplot(mapping=aes(fill=is_island, alpha = is_promoter))
            + geom_bar(stat='count', position='fill', color = "darkgray", width = .2)
            + scale_y_continuous(labels=scales::percent_format())
            + scale_fill_manual(values=c(
                'FALSE'='red', 'TRUE'='dodgerblue'
            ))
            + ylab('CpGI Proportion')
            + guides(fill=guide_legend(title="Island Status"),
                     alpha=guide_legend(title="Promoter Status"))
        )
    ),
  width_ratio=0.2
) + patchwork::plot_layout(heights=c(0.5, 1, 0.5), guides = "collect")
```

### Hyper vs Hypo {style="font-size: 2px;"}
```{r, include=FALSE}
p_results <- sapply(
  names(results)[12:14],
  FUN = function(x) {
    data <- results[[x]]
    data <- data[data$sig,]
    data$is_island <- factor(data$is_island, levels = c(FALSE, TRUE))
    data$status <- factor(data$status, levels = c("hyper", "hypo"))
    
    p <- ggplot(data) +
      geom_mosaic(aes(x = is_island, fill=status)) + 
      ggtitle(
            label = "Hyper/Hypo vs CpGI/nonCpGI"
      )
  },
  simplify = FALSE,
  USE.NAMES = TRUE
)
```
```{r fig.width=20, fig.height=10}
p1 <- p_results[["spf_gf"]] + ggtitle("SPF-GF")
p2 <- p_results[["consortium_gf"]] + ggtitle("CONS-GF")
p3 <- p_results[["eckp_gf"]] + ggtitle("ECKP-GF")

(p1 | p2)/(p3 | plot_spacer())
```

### Odds Ratio {style="font-size: 2px;"}
```{r, fig.width=10, fig.height=5}
test_results <- sapply(
  names(results[12:14]),
  FUN = function(x){
    data <- results[[x]]
    data$is_island <- factor(data$sig, levels = c(FALSE, TRUE))
    data$sig <- factor(data$sig, levels = c(TRUE, FALSE))
    table <- table(df$is_island, data$sig)
    table <- table[c("FALSE", "TRUE"),c("TRUE", "FALSE")]
    test <- fisher.test(table, alternative = "two.sided")
    
    p <- ggplot(data) +
      geom_mosaic(aes(x = sig, fill=type)) + 
      ggtitle(
            label = "Non-cpgi vs cpgi vs differential methylation significance",
            subtitle = sprintf("Fisher's exact p-value: %s, Odds ratio: %s, CI: %s/%s", 
                       test$p.value, round(test$estimate, 3), 
                       round(test$conf.int[1], 3), 
                       round(test$conf.int[2], 3))
      )
    
    return(list("test" = test, "table" = table, "plot" = p))
  },
  simplify = FALSE,
  USE.NAMES = TRUE
)

or_df <- data.frame(
  yAxis = length(test_results):1,
  or = as.vector(sapply(test_results, function(x){x$test$estimate})), 
  ciLo = as.vector(sapply(test_results, function(x){x$test$conf.int[1]})),
  ciHi = as.vector(sapply(test_results, function(x){x$test$conf.int[2]})),
  row.names = names(test_results)
)

or_df <- or_df[order(or_df$or),]
p <- ggplot(or_df, aes(x = or, 
                       y = reorder(rownames(or_df),
                                   order(or_df$or)))) +
  geom_point(size = 3.5, color = "orange") +
  geom_errorbarh(
    aes(xmax = ciHi, xmin = ciLo), 
    size = .5, 
    height = .1, 
    color = "gray50"
  ) + 
  geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed") +
  scale_x_continuous(breaks = seq(0,max(or_df$ciHi),1)) +
  xlab("Odds ratio") + 
  ylab("") +
  labs(title = "Odds ratios of each microbiome", 
       subtitle = "OR: Non-cpgi vs cpgi") +
  coriell::theme_coriell()

p
```
:::

## Differential Methylation using `r prettyNum(nrow(pj_normal), big.mark = ",", scientific = FALSE)` sites {style="font-size: 16px;"}
#### Comparing microbiome separating sidedness {style="font-size: 16px;"}
```{r, include=FALSE}
p_results <- sapply(
  names(results[6:11]),
  FUN = function(x){
    df <- results[[x]];
    
    df_plot <- df
    p <- coriell::plot_volcano(df_plot, x = "diff", y = "adj.P.Val", fdr = .1, lfc = .1) + 
      labs(caption = sprintf("FDR = .1 \ndiffMeth cutoff = .1 \nN sites: %s", nrow(df_plot))) + 
      xlab("diffMeth") + 
      theme(plot.title = element_text(size = 20))
    
    
    df_plot <- df[!df$is_island,]
    df_plot$adj.P.Val2 <- p.adjust(df_plot$P.Value, 
                                   n = nrow(df_plot), 
                                   method = "fdr")
    p1 <- coriell::plot_volcano(
      df_plot, 
      x = "diff", y = "adj.P.Val2", fdr = .1, lfc = .1
    ) + 
      labs(caption = sprintf("FDR = .1 \ndiffMeth cutoff = .1 \nN sites: %s", nrow(df_plot))) + 
      xlab("diffMeth") + 
      theme(plot.title = element_text(size = 20))
    
    
    df_plot <- df[df$is_island,]
    df_plot$adj.P.Val2 <- p.adjust(df_plot$P.Value, 
                                   n = nrow(df_plot), 
                                   method = "fdr")
    p2 <- coriell::plot_volcano(
      df_plot, 
      x = "diff", y = "adj.P.Val2", fdr = .1, lfc = .1
    ) + 
      labs(caption = sprintf("FDR = .1 \ndiffMeth cutoff = .1 \nN sites: %s", nrow(df_plot))) + 
      xlab("diffMeth") + 
      theme(plot.title = element_text(size = 20))
    
    return(list("all" = p, "non-islands" = p1, "islands" = p2))
  },
  simplify = FALSE,
  USE.NAMES = TRUE
)
```

::: panel-tabset
### Volcano plot (all) {style="font-size: 2px;"}
```{r fig.width=20, fig.height=10}
p1 <- p_results[["spf_gf_pcol"]]$all + ggtitle("SPF-GF-PCOL")
p2 <- p_results[["spf_gf_dcol"]]$all + ggtitle("SPF-GF-DCOL")
p3 <- p_results[["consortium_gf_pcol"]]$all + ggtitle("CONS-GF-PCOL")
p4 <- p_results[["consortium_gf_dcol"]]$all + ggtitle("CONS-GF-DCOL")
p5 <- p_results[["eckp_gf_pcol"]]$all + ggtitle("ECKP-GF-PCOL")
p6 <- p_results[["eckp_gf_dcol"]]$all + ggtitle("ECKP-GF-DCOL")

(p1 | p2) / (p3 | p4) / (p5 | p6)
```

### Volcano (non-islands) {style="font-size: 2px;"}
```{r fig.width=20, fig.height=10}
p1 <- p_results[["spf_gf_pcol"]]$`non-islands` + ggtitle("SPF-GF-PCOL")
p2 <- p_results[["spf_gf_dcol"]]$`non-islands` + ggtitle("SPF-GF-DCOL")
p3 <- p_results[["consortium_gf_pcol"]]$`non-islands` + ggtitle("CONS-GF-PCOL")
p4 <- p_results[["consortium_gf_dcol"]]$`non-islands` + ggtitle("CONS-GF-DCOL")
p5 <- p_results[["eckp_gf_pcol"]]$`non-islands` + ggtitle("ECKP-GF-PCOL")
p6 <- p_results[["eckp_gf_dcol"]]$`non-islands` + ggtitle("ECKP-GF-DCOL")

(p1 | p2) / (p3 | p4) / (p5 | p6)
```

### Volcano (islands) {style="font-size: 2px;"}
```{r fig.width=20, fig.height=10}
p1 <- p_results[["spf_gf_pcol"]]$islands + ggtitle("SPF-GF-PCOL")
p2 <- p_results[["spf_gf_dcol"]]$islands + ggtitle("SPF-GF-DCOL")
p3 <- p_results[["consortium_gf_pcol"]]$islands + ggtitle("CONS-GF-PCOL")
p4 <- p_results[["consortium_gf_dcol"]]$islands + ggtitle("CONS-GF-DCOL")
p5 <- p_results[["eckp_gf_pcol"]]$islands + ggtitle("ECKP-GF-PCOL")
p6 <- p_results[["eckp_gf_dcol"]]$islands + ggtitle("ECKP-GF-DCOL")

(p1 | p2) / (p3 | p4) / (p5 | p6)
```

### Upset plot {style="font-size: 2px;"}
```{r, fig.width=25, fig.height=10}
library(ComplexUpset)
upset(
  contrasts,
  names(results[6:11]),
  set_sizes=(
        upset_set_size(
            geom=geom_bar(
                aes(fill=is_island, alpha=is_promoter, x=group),
                width = .4,
                color = "darkgray"
            ),
            position='left'
        ) 
        + scale_fill_manual(values=c(
                'FALSE'='red', 'TRUE'='dodgerblue'
            )) 
        + guides(fill=guide_legend(title="Island Status"),
                     alpha=guide_legend(title="Promoter Status"))
        + scale_y_continuous(breaks=seq(0, 5000, 2500))
        + geom_text(aes(label = ..count..), vjust = 0, stat='count')
    ),
  base_annotations=list(
        'Intersection size'=intersection_size(
            counts=TRUE,
            color = "darkgray",
            width = .6,
            mapping=aes(fill=is_island),
            bar_number_threshold = Inf
        ) 
        + scale_fill_manual(values=c(
            'FALSE'='red', 'TRUE'='dodgerblue'
        ))
        + guides(fill=guide_legend(title="Island Status"))
    ),
  annotations = list(
        'CpGI/nonCpGI'=(
            ggplot(mapping=aes(fill=is_island, alpha = is_promoter))
            + geom_bar(stat='count', position='fill', color = "darkgray", width = .6)
            + scale_y_continuous(labels=scales::percent_format())
            + scale_fill_manual(values=c(
                'FALSE'='red', 'TRUE'='dodgerblue'
            ))
            + ylab('CpGI Proportion')
            + guides(fill=guide_legend(title="Island Status"),
                     alpha=guide_legend(title="Promoter Status"))
        )
    ),
  width_ratio=0.2
) + patchwork::plot_layout(heights=c(0.5, 1, 0.5), guides = "collect")
```

### Hyper vs Hypo {style="font-size: 2px;"}
```{r, include=FALSE}
p_results <- sapply(
  names(results)[6:11],
  FUN = function(x) {
    data <- results[[x]]
    data <- data[data$sig,]
    data$is_island <- factor(data$is_island, levels = c(FALSE, TRUE))
    data$status <- factor(data$status, levels = c("hyper", "hypo"))
    
    p <- ggplot(data) +
      geom_mosaic(aes(x = is_island, fill=status)) + 
      ggtitle(
            label = "Hyper/Hypo vs CpGI/nonCpGI"
      )
  },
  simplify = FALSE,
  USE.NAMES = TRUE
)
```

```{r fig.width=20, fig.height=10}
p1 <- p_results[["spf_gf_pcol"]] + ggtitle("SPF-GF-PCOL")
p2 <- p_results[["spf_gf_dcol"]] + ggtitle("SPF-GF-DCOL")
p3 <- p_results[["consortium_gf_pcol"]] + ggtitle("CONS-GF-PCOL")
p4 <- p_results[["consortium_gf_dcol"]] + ggtitle("CONS-GF-DCOL")
p5 <- p_results[["eckp_gf_pcol"]] + ggtitle("ECKP-GF-PCOL")
p6 <- p_results[["eckp_gf_dcol"]] + ggtitle("ECKP-GF-DCOL")

(p1 | p2) / (p3 | p4) / (p5 | p6) + 
  plot_layout(guides = "collect") & theme(legend.position = 'bottom')
```

### Odds Ratio {style="font-size: 2px;"}
```{r, fig.width=10, fig.height=5}
test_results <- sapply(
  names(results[12:14]),
  FUN = function(x){
    data <- results[[x]]
    data$is_island <- factor(data$sig, levels = c(FALSE, TRUE))
    data$sig <- factor(data$sig, levels = c(TRUE, FALSE))
    table <- table(df$is_island, data$sig)
    table <- table[c("FALSE", "TRUE"),c("TRUE", "FALSE")]
    test <- fisher.test(table, alternative = "two.sided")
    
    p <- ggplot(data) +
      geom_mosaic(aes(x = sig, fill=type)) + 
      ggtitle(
            label = "Non-cpgi vs cpgi vs differential methylation significance",
            subtitle = sprintf("Fisher's exact p-value: %s, Odds ratio: %s, CI: %s/%s", 
                       test$p.value, round(test$estimate, 3), 
                       round(test$conf.int[1], 3), 
                       round(test$conf.int[2], 3))
      )
    
    return(list("test" = test, "table" = table, "plot" = p))
  },
  simplify = FALSE,
  USE.NAMES = TRUE
)

or_df <- data.frame(
  yAxis = length(test_results):1,
  or = as.vector(sapply(test_results, function(x){x$test$estimate})), 
  ciLo = as.vector(sapply(test_results, function(x){x$test$conf.int[1]})),
  ciHi = as.vector(sapply(test_results, function(x){x$test$conf.int[2]})),
  row.names = names(test_results)
)

or_df <- or_df[order(or_df$or),]
p <- ggplot(or_df, aes(x = or, 
                       y = reorder(rownames(or_df),
                                   order(or_df$or)))) +
  geom_point(size = 3.5, color = "orange") +
  geom_errorbarh(
    aes(xmax = ciHi, xmin = ciLo), 
    size = .5, 
    height = .1, 
    color = "gray50"
  ) + 
  geom_vline(aes(xintercept = 1), size = .25, linetype = "dashed") +
  scale_x_continuous(breaks = seq(0,max(or_df$ciHi),1)) +
  xlab("Odds ratio") + 
  ylab("") +
  labs(title = "Odds ratios of each microbiome", 
       subtitle = "OR: Non-cpgi vs cpgi") +
  coriell::theme_coriell()

p
```
:::